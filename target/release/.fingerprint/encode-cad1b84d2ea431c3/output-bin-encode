{"message":"unused imports: `Write`, `stdin`, `stdout`","code":{"code":"unused_imports","explanation":null},"level":"warning","spans":[{"file_name":"encode/src/main.rs","byte_start":55,"byte_end":60,"line_start":2,"line_end":2,"column_start":30,"column_end":35,"is_primary":true,"text":[{"text":"use std::io::{self, BufRead, stdin,stdout, Write};","highlight_start":30,"highlight_end":35}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"encode/src/main.rs","byte_start":61,"byte_end":67,"line_start":2,"line_end":2,"column_start":36,"column_end":42,"is_primary":true,"text":[{"text":"use std::io::{self, BufRead, stdin,stdout, Write};","highlight_start":36,"highlight_end":42}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"encode/src/main.rs","byte_start":69,"byte_end":74,"line_start":2,"line_end":2,"column_start":44,"column_end":49,"is_primary":true,"text":[{"text":"use std::io::{self, BufRead, stdin,stdout, Write};","highlight_start":44,"highlight_end":49}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"`#[warn(unused_imports)]` on by default","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"remove the unused imports","code":null,"level":"help","spans":[{"file_name":"encode/src/main.rs","byte_start":53,"byte_end":74,"line_start":2,"line_end":2,"column_start":28,"column_end":49,"is_primary":true,"text":[{"text":"use std::io::{self, BufRead, stdin,stdout, Write};","highlight_start":28,"highlight_end":49}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unused imports: `Write`, `stdin`, `stdout`\u001b[0m\n\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mencode/src/main.rs:2:30\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m2\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0muse std::io::{self, BufRead, stdin,stdout, Write};\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                             \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: `#[warn(unused_imports)]` on by default\u001b[0m\n\n"}
{"message":"1 warning emitted","code":null,"level":"warning","spans":[],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: 1 warning emitted\u001b[0m\n\n"}
